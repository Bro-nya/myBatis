<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace：名称空间-->
<mapper namespace="com.bronya.mapper.BrandMapper">
    <!--sql片段-->
    <!--<sql id="brand_column">
        id,brand_name as brandName,company_name as companyName,ordered,description,status
    </sql>
    <select id="selsctAll" resultType="brand">
        select
        <include refid="brand_column"></include>
        from tb_brand;
    </select>-->

    <!--resultMap映射-->
    <!--
    id:唯一标识 type：映射的类型，支持别名
    -->
    <resultMap id="brandResultMap" type="Brand">
        <!--
        id：完成主键字段映射
        result：完成一般字段映射
            column：表的列明
            property：实体类的属性名
        -->
        <result column="brand_name" property="brandName"/>
        <result column="company_name" property="companyName"/>
    </resultMap>
    <select id="selectAll" resultMap="brandResultMap">
        select
        *
        from tb_brand;
    </select>
    <select id="selectById" resultMap="brandResultMap">
        select * from tb_brand where id=#{id}
    </select>
    <!--条件查询-->
    <!--<select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
        where status = #{status}
        and company_name like #{companyName}
        and brand_name like #{brandName}
    </select>-->
    <!--动态sql动态条件查询-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select *
        from tb_brand
       /* where 1=1*/
       <where>
        <if test="status!=null">
         and status = #{status}
        </if>
        <if test="companyName!=null and companyName!=''">
        and company_name like #{companyName}
        </if>
        <if test="brandName!=null and brandName!=''">
        and brand_name like #{brandName}
        </if>
       </where>
    </select>

    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        <where>
        <choose><!--switch-->
            <when test="status!=null">status = #{status}</when><!--case-->
            <when test="companyName!=null and companyName!=''">company_name like #{companyName}</when>
            <when test="brandName!=null and brandName!=''">brand_name like #{brandName}</when>
            <!--<otherwise>1=1</otherwise>--><!--用了<where>包裹后，这个相当于default的就可以注释掉了-->
        </choose>
        </where>
    </select>
    <!--插入-->
    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
            value (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>
    <!--修改-->
    <update id="update">
        update tb_brand
        <set>
        <if test="brandName != null and brandName != ''">
            brand_name = #{brandName},
        </if>
        <if test="companyName != null and companyName != ''">
            company_name = #{companyName},
        </if>
        <if test="ordered != null">
            ordered = #{ordered},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        <if test="status != null">
            status = #{status}
        </if>
    </set>
        where id = #{id};
    </update>
    <delete id="delete">
        delete from tb_brand where id=#{id}
    </delete>
    <delete id="deletes">
        delete from tb_brand where id in
        <!--mybatis会将一个数组参数，封装为mapper集合
        默认：array=数组  collection="array"
        还可以使用@Param改变mapper集合默认key的名称
        -->
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

</mapper>